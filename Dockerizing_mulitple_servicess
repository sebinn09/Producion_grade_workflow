vi docker-compose.yml
-----------------------------------------------------------
version: '3'
services:
  postgres:
     image: 'postgres:latest'
      environment:
         POSTGRES_PASSWORD=postgres_password
  redis:
     image: 'redis:latest'
  nginx:
     depends_on:
      - api
      - client
     restart: always
     build:
         dockerfile: dockerfile.dev
         context: ./nginx
     ports:
        - '3050:80'
  api: #server
    build:
      dockerfile: dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS-PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    build:
      dockerfile: dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./server:/app  
      
  worker:
    build:
      dockerfile: dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./server:/app
 -------------------------------------------------------------------------
      
 vi dockerfile.dev  #make thsi file in directories server,client,worker
 -----------------------------------------------------------------
 FROM node:16-alpine
 WORKDIR '/app'
 COPY ./package.json ./
 RUN npm install
 COPY . .
 CMD ["npm","run","start"]
 ------------------------------------------------------------------------
 
 Create a directory nginx
 Create a file default.conf
 
vi default.conf
------------------------------------------------------------------------------ 
upstream client {
   server client:3000;
}
upstream api {               #server
   server api:5000;
}
server{
  listen 80;
  location / {
    proxy_pass http://client;
}
location /sockjs-node {
    proxy_pass http://client;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
  location /api {
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }
}
------------------------------------------------------------------------------------
vi dockerfile.dev
--------------------------------------------------------------------------------------
FROM nginx
COPY ./default.conf /etc/nginx/conf.d/default.conf # Will overrite default.conf
